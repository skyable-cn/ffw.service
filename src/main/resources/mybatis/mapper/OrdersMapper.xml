<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrdersMapper">
    <!--表名 -->
    <sql id="tableName">
		orders
	</sql>

    <!-- 字段 -->
    <sql id="Field">
		ORDER_ID,
		ORDERSN,
		WEIXINSN,
		MEMBER_ID,
		ORIGINAL,
		NEEDMONEY,
		PERCENT,
		MONEY,
		DERATE,
		USEID,
		USEKEY,
		CDT,
		UDT,
		USEPERSON,
		PERSONPHONE,
		STATE,
		FROMWXOPEN_ID,
		GIVEMONEY,
		GDT,
		VIPFLAG,
		CLASS
	</sql>

    <!-- 字段值 -->
    <sql id="FieldValue">
		#{ORDER_ID},
		#{ORDERSN},
		#{WEIXINSN},
		#{MEMBER_ID},
		#{ORIGINAL},
		#{NEEDMONEY},
		#{PERCENT},
		#{MONEY},
		#{DERATE},
		#{USEID},
		#{USEKEY},
		#{CDT},
		#{UDT},
		#{USEPERSON},
		#{PERSONPHONE},
		#{STATE},
		#{FROMWXOPEN_ID},
		#{GIVEMONEY},
		#{GDT},
		#{VIPFLAG},
		#{CLASS}
	</sql>

   <select id="listPage" parameterType="page" resultType="pd">
        select
	        os.ORDER_ID,
			os.ORDERSN,
			os.WEIXINSN,
			os.MEMBER_ID,
			os.ORIGINAL,
			os.NEEDMONEY,
			os.PERCENT,
			os.MONEY,
			os.DERATE,
			os.USEID,
			os.USEKEY,
			os.CDT,
			os.UDT,
			os.USEPERSON,
			os.PERSONPHONE,
			os.STATE,
			os.FROMWXOPEN_ID,
			os.GIVEMONEY,
			os.GDT,
			os.VIPFLAG,
			os.CLASS,
			osi.GOODS_ID,
			osi.NUMBER,
			g.GOODSNAME,
			g.GOODSDESC,
			g.BUYNOTICE,
			g.SELLMONEY,
			g.ORIGINALMONEY,
			g.BALANCEMONEY,
			g.MEMBERBACKMONEY,
			g.VIPBACKMONEY,
			g.BACKMONEY0,
			g.BACKMONEY1,
			g.BACKMONEY2,
			g.STARTTIME,
			g.ENDTIME,
			g.USESTARTTIME,
			g.USEENDTIME,
			s.SHOP_ID,
			s.SHOPNAME,
			s.SHOPADDRESS,
			s.CONTRACTPHONE,
			s.LONGITUDE,
			s.LATITUDE,
			p.FILEPATH,
			m.NICKNAME,
			m.WXOPEN_ID,
			mk.MARKETNAME
        from
        <include refid="tableName"></include> os
        inner join ordersitem osi on os.order_id = osi.order_id
        left join goods g on osi.goods_id = g.goods_id
        left join shop s on g.shop_id = s.shop_id
        left join ( SELECT * FROM file WHERE filetype = '1'  GROUP BY reference_id ) p on g.goods_id = p.reference_id
        left join member m on os.member_id = m.member_id
        left join market mk on s.market_id = mk.market_id
        where
        1 = 1
        <if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
            and
            (
            	os.ORDERSN LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            	
            	or
            	
            	os.USEKEY LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            )
        </if>
        <if test="pd.DOMAIN_ID!= null and pd.DOMAIN_ID != ''"><!-- 关键词检索 -->
            and mk.domain_id = #{pd.DOMAIN_ID}
        </if>
         <if test="pd.MEMBER_ID != null and pd.MEMBER_ID != ''">
            and os.MEMBER_ID = #{pd.MEMBER_ID}
        </if>
        <if test="pd.STATE != null and pd.STATE != ''">
            and os.STATE = #{pd.STATE}
        </if>
        <if test="pd.FROMWXOPEN_ID != null and pd.FROMWXOPEN_ID != ''">
            and os.FROMWXOPEN_ID = #{pd.FROMWXOPEN_ID}
        </if>
        <if test="pd.SHOP_ID != null and pd.SHOP_ID != ''">
            and s.SHOP_ID = #{pd.SHOP_ID}
        </if>
        <if test="pd.SQLCONDITION != null and pd.SQLCONDITION != ''"><!-- 关键词检索 -->
            ${pd.SQLCONDITION}
        </if>
        <if test="pd.CLASS != null and pd.CLASS != ''">
            and os.CLASS = #{pd.CLASS}
        </if>
         <if test="pd.MARKET_ID!= null and pd.MARKET_ID != ''"><!-- 关键词检索 -->
            and mk.market_id = #{pd.MARKET_ID}
        </if>
        order by os.ORDER_ID DESC
    </select>
    
    <select id="listPageBill" parameterType="page" resultType="pd">
        select
	    os.ORDER_ID,
			os.ORDERSN,
			os.WEIXINSN,
			os.MEMBER_ID,
			os.ORIGINAL,
			os.NEEDMONEY,
			os.PERCENT,
			os.MONEY,
			os.DERATE,
			os.USEID,
			os.USEKEY,
			os.CDT,
			os.UDT,
			os.USEPERSON,
			os.PERSONPHONE,
			os.STATE,
			os.FROMWXOPEN_ID,
			os.GIVEMONEY,
			os.GDT,
			os.VIPFLAG,
			os.CLASS,
			osi.GOODS_ID,
			osi.NUMBER,
			g.GOODSNAME,
			g.GOODSDESC,
			g.BUYNOTICE,
			g.SELLMONEY,
			g.ORIGINALMONEY,
			g.BALANCEMONEY,
			g.MEMBERBACKMONEY,
			g.VIPBACKMONEY,
			g.BACKMONEY0,
			g.BACKMONEY1,
			g.BACKMONEY2,
			g.STARTTIME,
			g.ENDTIME,
			g.USESTARTTIME,
			g.USEENDTIME,
			s.SHOP_ID,
			s.SHOPNAME,
			s.SHOPADDRESS,
			s.CONTRACTPHONE,
			s.LONGITUDE,
			s.LATITUDE,
			p.FILEPATH,
			m.NICKNAME,
			m.WXOPEN_ID,
			ifnull((select a.givemoney from account a where a.type=0 and a.order_id = os.order_id and a.member_id = os.member_id),0) ACCOUNT0, 
			ifnull((select a.givemoney from account a where a.type=1 and a.order_id = os.order_id and a.member_id = os.member_id),0) ACCOUNT1, 
			ifnull((select a.givemoney from account a where a.type=2 and a.order_id = os.order_id and a.member_id = os.member_id),0) ACCOUNT2, 
			ifnull((select a.givemoney from account a where a.type=3 and a.order_id = os.order_id and a.member_id = os.member_id),0) ACCOUNT3, 
			ifnull((select a.givemoney from account a where a.type=4 and a.order_id = os.order_id and a.member_id = os.member_id),0) ACCOUNT4
        from
        <include refid="tableName"></include> os
        left join ordersitem osi on os.order_id = osi.order_id
        left join goods g on osi.goods_id = g.goods_id
        left join shop s on g.shop_id = s.shop_id
        left join ( SELECT * FROM file WHERE filetype = '1'  GROUP BY reference_id ) p on g.goods_id = p.reference_id
        left join member m on os.member_id = m.member_id
        where
        os.ORDER_ID in (select order_id from account where member_id = #{pd.MEMBER_ID} GROUP BY order_id)
         <if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
            and
            (
            	os.ORDERSN LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            )
        </if>
        order by os.ORDER_ID DESC
    </select>
    
    <select id="listPageShop" parameterType="page" resultType="pd">
    	select
	    	os.ORDER_ID,
			os.ORDERSN,
			os.WEIXINSN,
			os.MEMBER_ID,
			os.ORIGINAL,
			os.NEEDMONEY,
			os.PERCENT,
			os.MONEY,
			os.DERATE,
			os.USEID,
			os.USEKEY,
			os.CDT,
			os.UDT,
			os.USEPERSON,
			os.PERSONPHONE,
			os.STATE,
			os.FROMWXOPEN_ID,
			os.GIVEMONEY,
			os.GDT,
			os.VIPFLAG,
			os.CLASS,
			osi.GOODS_ID,
			osi.NUMBER,
			g.GOODSNAME,
			g.GOODSDESC,
			g.BUYNOTICE,
			g.SELLMONEY,
			g.ORIGINALMONEY,
			g.BALANCEMONEY,
			g.MEMBERBACKMONEY,
			g.VIPBACKMONEY,
			g.BACKMONEY0,
			g.BACKMONEY1,
			g.BACKMONEY2,
			g.STARTTIME,
			g.ENDTIME,
			g.USESTARTTIME,
			g.USEENDTIME,
			s.SHOP_ID,
			s.SHOPNAME,
			s.SHOPADDRESS,
			s.CONTRACTPHONE,
			s.LONGITUDE,
			s.LATITUDE,
			p.FILEPATH,
			m.NICKNAME,
			m.WXOPEN_ID,
			st.SETTLEMONEY
        from
        <include refid="tableName"></include> os
        left join ordersitem osi on os.order_id = osi.order_id
        left join goods g on osi.goods_id = g.goods_id
        left join shop s on g.shop_id = s.shop_id
        left join ( SELECT * FROM file WHERE filetype = '1'  GROUP BY reference_id ) p on g.goods_id = p.reference_id
        left join member m on os.member_id = m.member_id
				left join settle st on os.order_id = st.order_id
		where os.state = 3 and s.shop_id = #{pd.SHOP_ID}
		 <if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
            and
            (
            	os.ORDERSN LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            )
        </if>
        <if test="pd.CLASS != null and pd.CLASS != ''">
            and os.CLASS = #{pd.CLASS}
        </if>
        order by os.ORDER_ID DESC
    </select>

    <select id="listAll" parameterType="pd" resultType="pd">
        select
        	os.ORDER_ID,
			os.ORDERSN,
			os.WEIXINSN,
			os.MEMBER_ID,
			os.ORIGINAL,
			os.NEEDMONEY,
			os.PERCENT,
			os.MONEY,
			os.DERATE,
			os.USEID,
			os.USEKEY,
			os.CDT,
			os.UDT,
			os.USEPERSON,
			os.PERSONPHONE,
			os.STATE,
			os.FROMWXOPEN_ID,
			os.GIVEMONEY,
			os.GDT,
			os.VIPFLAG,
			os.CLASS,
			osi.GOODS_ID,
			osi.NUMBER,
			g.GOODSNAME,
			g.GOODSDESC,
			g.BUYNOTICE,
			g.SELLMONEY,
			g.ORIGINALMONEY,
			g.BALANCEMONEY,
			g.MEMBERBACKMONEY,
			g.VIPBACKMONEY,
			g.BACKMONEY0,
			g.BACKMONEY1,
			g.BACKMONEY2,
			g.STARTTIME,
			g.ENDTIME,
			g.USESTARTTIME,
			g.USEENDTIME,
			s.SHOP_ID,
			s.SHOPNAME,
			s.SHOPADDRESS,
			s.CONTRACTPHONE,
			s.LONGITUDE,
			s.LATITUDE,
			p.FILEPATH,
			m.NICKNAME,
			m.WXOPEN_ID
        from
        <include refid="tableName"></include> os
        left join ordersitem osi on os.order_id = osi.order_id
        left join goods g on osi.goods_id = g.goods_id
        left join shop s on g.shop_id = s.shop_id
        left join ( SELECT * FROM file WHERE filetype = '1'  GROUP BY reference_id ) p on g.goods_id = p.reference_id
        left join member m on os.member_id = m.member_id
        left join market mk on s.market_id = mk.market_id
         where
        1 = 1
        <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
            and
            (
            	os.ORDERSN LIKE CONCAT(CONCAT('%', #{keywords}),'%')
            	
            	or
            	
            	os.USEKEY LIKE CONCAT(CONCAT('%', #{keywords}),'%')
            )
        </if>
        <if test="MEMBER_ID != null and MEMBER_ID != ''">
            and os.MEMBER_ID = #{MEMBER_ID}
        </if>
        <if test="STATE != null and STATE != ''">
            and os.STATE = #{STATE}
        </if>
        <if test="FROMWXOPEN_ID != null and FROMWXOPEN_ID != ''">
            and os.FROMWXOPEN_ID = #{FROMWXOPEN_ID}
        </if>
        <if test="SHOP_ID != null and SHOP_ID != ''">
            and s.SHOP_ID = #{SHOP_ID}
        </if>
         <if test="CLASS != null and CLASS != ''">
            and os.CLASS = #{CLASS}
        </if>
         <if test="MARKET_ID!= null and MARKET_ID != ''"><!-- 关键词检索 -->
            and mk.market_id = #{MARKET_ID}
        </if>
        <if test="SQLCONDITION != null and SQLCONDITION != ''"><!-- 关键词检索 -->
            ${SQLCONDITION}
        </if>
        order by os.ORDER_ID DESC
    </select>
    
    <select id="listAllRefund" parameterType="pd" resultType="pd">
    	select 
    		REFUNDTYPE_ID,
    		REFUNDTYPENAME
    	from refundtype
    		order by REFUNDTYPE_ID asc
    </select>
    
    <insert id="saveRefund" parameterType="pd">
    	insert into refundinfo values(null,#{ORDER_ID},#{REFUNDDESC},#{CDT})
    </insert>
    
    <insert id="saveRate" parameterType="pd">
    	insert into rate values(null,#{ORDER_ID},#{RATECONTENT},#{CDT})
    </insert>

    <!-- 新增 -->
    <insert id="save" parameterType="pd" useGeneratedKeys="true" keyProperty="ORDER_ID">
        insert into <include refid="tableName"></include> (
        <include refid="Field"></include>
        ) values (
        <include refid="FieldValue"></include>
        )
    </insert>
    
        <!-- 修改 -->
    <update id="edit" parameterType="pd">
        update
        <include refid="tableName"></include>
        set
        ORDER_ID = #{ORDER_ID}
        <if test="STATE != null and STATE != ''">
            ,STATE = #{STATE}
        </if>
        <if test="WEIXINSN != null and WEIXINSN != ''">
            ,WEIXINSN = #{WEIXINSN}
        </if>
        <if test="USEPERSON != null and USEPERSON != ''">
            ,USEPERSON = #{USEPERSON}
        </if>
        <if test="PERSONPHONE != null and PERSONPHONE != ''">
            ,PERSONPHONE = #{PERSONPHONE}
        </if>
        <if test="UDT != null and UDT != ''">
            ,UDT = #{UDT}
        </if>
        <if test="GIVEMONEY != null and GIVEMONEY != ''">
            ,GIVEMONEY = #{GIVEMONEY}
        </if>
        <if test="GDT != null and GDT != ''">
            ,GDT = #{GDT}
        </if>
        where
        ORDER_ID = #{ORDER_ID}
    </update>
    
    <!-- 删除 -->
    <delete id="delete" parameterType="pd" flushCache="false">
        delete from
        <include refid="tableName"></include>
        where
        ORDER_ID = #{ORDER_ID}
    </delete>
    
    <!-- 通过user_id获取数据 -->
    <select id="findById" parameterType="pd" resultType="pd">
        select
        	os.ORDER_ID,
			os.ORDERSN,
			os.WEIXINSN,
			os.MEMBER_ID,
			os.ORIGINAL,
			os.NEEDMONEY,
			os.PERCENT,
			os.MONEY,
			os.DERATE,
			os.USEID,
			os.USEKEY,
			os.CDT,
			os.UDT,
			os.USEPERSON,
			os.PERSONPHONE,
			os.STATE,
			os.FROMWXOPEN_ID,
			os.GIVEMONEY,
			os.GDT,
			os.VIPFLAG,
			os.CLASS,
			osi.GOODS_ID,
			osi.NUMBER,
			g.GOODSNAME,
			g.GOODSDESC,
			g.BUYNOTICE,
			g.SELLMONEY,
			g.ORIGINALMONEY,
			g.BALANCEMONEY,
			g.MEMBERBACKMONEY,
			g.VIPBACKMONEY,
			g.BACKMONEY0,
			g.BACKMONEY1,
			g.BACKMONEY2,
			g.STARTTIME,
			g.ENDTIME,
			g.USESTARTTIME,
			g.USEENDTIME,
			s.SHOP_ID,
			s.SHOPNAME,
			s.SHOPADDRESS,
			s.CONTRACTPHONE,
			s.LONGITUDE,
			s.LATITUDE,
			p.FILEPATH,
			m.NICKNAME,
			m.WXOPEN_ID
        from
        <include refid="tableName"></include> os
        left join ordersitem osi on os.order_id = osi.order_id
        left join goods g on osi.goods_id = g.goods_id
        left join shop s on g.shop_id = s.shop_id
        left join ( SELECT * FROM file WHERE filetype = '1'  GROUP BY reference_id ) p on g.goods_id = p.reference_id
        left join member m on os.member_id = m.member_id
        where
        os.ORDER_ID = #{ORDER_ID}
    </select>
    
    <select id="findBy" parameterType="pd" resultType="pd">
        select
        	os.ORDER_ID,
			os.ORDERSN,
			os.WEIXINSN,
			os.MEMBER_ID,
			os.ORIGINAL,
			os.NEEDMONEY,
			os.PERCENT,
			os.MONEY,
			os.DERATE,
			os.USEID,
			os.USEKEY,
			os.CDT,
			os.UDT,
			os.USEPERSON,
			os.PERSONPHONE,
			os.STATE,
			os.FROMWXOPEN_ID,
			os.GIVEMONEY,
			os.GDT,
			os.VIPFLAG,
			os.CLASS,
			osi.GOODS_ID,
			osi.NUMBER,
			g.GOODSNAME,
			g.GOODSDESC,
			g.BUYNOTICE,
			g.SELLMONEY,
			g.ORIGINALMONEY,
			g.BALANCEMONEY,
			g.MEMBERBACKMONEY,
			g.VIPBACKMONEY,
			g.BACKMONEY0,
			g.BACKMONEY1,
			g.BACKMONEY2,
			g.STARTTIME,
			g.ENDTIME,
			g.USESTARTTIME,
			g.USEENDTIME,
			s.SHOP_ID,
			s.SHOPNAME,
			s.SHOPADDRESS,
			s.CONTRACTPHONE,
			s.LONGITUDE,
			s.LATITUDE,
			p.FILEPATH,
			m.NICKNAME,
			m.WXOPEN_ID
        from
        <include refid="tableName"></include> os
        left join ordersitem osi on os.order_id = osi.order_id
        left join goods g on osi.goods_id = g.goods_id
        left join shop s on g.shop_id = s.shop_id
        left join ( SELECT * FROM file WHERE filetype = '1'  GROUP BY reference_id ) p on g.goods_id = p.reference_id
        left join member m on os.member_id = m.member_id
        where
        1 = 1
        <if test="USEID != null and USEID != ''">
            and os.USEID = #{USEID}
        </if>
        <if test="ORDERSN != null and ORDERSN != ''">
            and os.ORDERSN = #{ORDERSN}
        </if>
        limit 0,1
    </select>
</mapper>